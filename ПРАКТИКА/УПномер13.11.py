def min_positive(func):
    x = 0 # начало индекса нашего списка
    step = 1 # шаг поиска
    while func(x) <= 0: # поиск начинается с первого элемента и заканчивается последним
        x += step # увеличиваем индекс двойкой
        step *= 2  # Удваиваем шаг, пока не найдём положительное значение


    left = x - step // 2 # начало предыдущей степени двойки
    right = x # конец предыдущей степени двойки
    while left < right: # поиск начинается с первого элемента и заканчивается последним
        mid = (left + right) // 2  # вычисляем среднее арифметическое деление
        if func(mid) > 0: # если элемент списка равен target, то возвращаем True
            right = mid # переходим вправо
        else: # список по возрастанию — меньше значит "справа"
            left = mid + 1 # переходим влево
    return func(left) # возвращаем найденный минимальный элемент


def func(x): # функция для поиска минимального элемента
    return x + 1 # возвращаем элемент списка с увеличением на 1

print(min_positive(func))


def func(x): # функция для поиска минимального элемента
    return 2*x - 9 # возвращаем элемент списка с уменьшением на 2

print(min_positive(func))


def func(x): # функция для поиска минимального элемента
    return x**3 + 1 # возвращаем элемент списка с увеличением на 3

print(min_positive(func))














